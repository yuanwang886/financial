<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.finance.p2p.dao.BuyMapper" >
  <resultMap id="BaseResultMap" type="com.finance.p2p.entity.Buy" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="match_money" property="matchMoney" jdbcType="DECIMAL" />
    <result column="out_money" property="outMoney" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, money, match_money, out_money, state, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from p2p_buy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from p2p_buy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.finance.p2p.entity.Buy" >
    insert into p2p_buy (id, user_id, money, 
      match_money, out_money, state, 
      create_time, modify_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, 
      #{matchMoney,jdbcType=DECIMAL}, #{outMoney,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.finance.p2p.entity.Buy" >
    insert into p2p_buy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="matchMoney != null" >
        match_money,
      </if>
      <if test="outMoney != null" >
        out_money,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="matchMoney != null" >
        #{matchMoney,jdbcType=DECIMAL},
      </if>
      <if test="outMoney != null" >
        #{outMoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.finance.p2p.entity.Buy" >
    update p2p_buy
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="matchMoney != null" >
        match_money = #{matchMoney,jdbcType=DECIMAL},
      </if>
      <if test="outMoney != null" >
        out_money = #{outMoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.finance.p2p.entity.Buy" >
    update p2p_buy
    set user_id = #{userId,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      match_money = #{matchMoney,jdbcType=DECIMAL},
      out_money = #{outMoney,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="countBuyByCondtion" resultType="java.lang.Integer" >
    select count(1)
    from p2p_buy
    where user_id = #{userId,jdbcType=BIGINT} and state <![CDATA[ < ]]> #{state,jdbcType=INTEGER}
  </select>
  
  <!-- 余额全款，如果连预付款都没有匹配完毕，那么我们就暂时就不匹配了 -->
  <select id="selectSurplus" resultMap="BaseResultMap">
    select 
 	<include refid="Base_Column_List" />
    from p2p_buy a
    where timestampdiff(DAY, create_time, #{nowDate}) >= #{day}
    and state <![CDATA[ = ]]> 0
    and match_money <![CDATA[ > ]]> 0
    and not EXISTS (select 1 from p2p_user b where b.user_id = a.user_id  and instr(b.relation, "_") = 0 )
    order by id 
    limit 1
  </select>
  
  <!-- 对内置用户进行全额匹配 -->
  <select id="selectInnerMatch" resultMap="BaseResultMap">
    select 
 	<include refid="Base_Column_List" />
    from p2p_buy a
    where state <![CDATA[ = ]]> 0
    and match_money <![CDATA[ > ]]> 0
    and EXISTS (select 1 from p2p_user b where b.user_id = a.user_id  and instr(b.relation, "_") = 0 )
    order by id 
    limit 1
  </select>
  
  <select id="queryUserLastBuy" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
 	<include refid="Base_Column_List" />
    from p2p_buy 
    where user_id = #{userId}
    order by id Desc
    limit 1
  </select>
  
  <select id="countUserUnComplate" resultType="java.lang.Integer" >
    select count(1)
    from p2p_buy
    where user_id = #{userId,jdbcType=BIGINT} and state <![CDATA[ < ]]> #{state,jdbcType=INTEGER}
  </select>
  
  <!-- 锁定用户，更改用户的金额 如果为5那么就是匹配完毕，我们就不要干扰了，如果为4的话匹配完了但是没有打款可以锁定吧-->
  <update id="updateUserBuyWhenLock" >
    update p2p_buy
    set match_money = money - out_money, state = 9, modify_time = #{nowDate}
    where user_id = #{userId} and state <![CDATA[ < ]]> 5
  </update>
  
  <update id="updateUserBuyWhenUnLock" >
    update p2p_buy
    set state = 0, modify_time = #{nowDate}
    where user_id = #{userId} and state <![CDATA[ = ]]> 9
  </update>
  
  
<update id="updateById" parameterType="com.finance.p2p.entity.Buy" >
    update p2p_buy
    <set >
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL} + money,
      </if>
      <if test="matchMoney != null" >
        match_money = #{matchMoney,jdbcType=DECIMAL} + match_money,
      </if>
      <if test="outMoney != null" >
        out_money = #{outMoney,jdbcType=DECIMAL} + out_money,
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>