<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.finance.p2p.dao.SNoticeMapper">
	<resultMap
		id="BaseResultMap"
		type="com.finance.p2p.entity.SNotice">
		<id
			column="id"
			property="id"
			jdbcType="BIGINT" />
		<result
			column="title"
			property="title"
			jdbcType="VARCHAR" />
		<result
			column="content"
			property="content"
			jdbcType="VARCHAR" />
		<result
			column="create_time"
			property="createTime"
			jdbcType="TIMESTAMP" />
		<result
			column="modify_time"
			property="modifyTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, content, create_time, modify_time
	</sql>
	<select
		id="selectByPrimaryKey"
		resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from p2p_s_notice
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete
		id="deleteByPrimaryKey"
		parameterType="java.lang.Long">
		delete from p2p_s_notice
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert
		id="insert"
		parameterType="com.finance.p2p.entity.SNotice">
		insert into p2p_s_notice (id, title, content,
		create_time, modify_time)
		values (#{id,jdbcType=BIGINT},
		#{title,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
	</insert>
	<insert
		id="insertSelective"
		parameterType="com.finance.p2p.entity.SNotice">
		insert into p2p_s_notice
		<trim
			prefix="("
			suffix=")"
			suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
		</trim>
		<trim
			prefix="values ("
			suffix=")"
			suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update
		id="updateByPrimaryKeySelective"
		parameterType="com.finance.p2p.entity.SNotice">
		update p2p_s_notice
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update
		id="updateByPrimaryKey"
		parameterType="com.finance.p2p.entity.SNotice">
		update p2p_s_notice
		set title =
		#{title,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modify_time =
		#{modifyTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select
		id="getNoticeList"
		parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from p2p_s_notice
		<where>
			<if test="startDate != null and startDate != ''">
				and create_time <![CDATA[ >= ]]>
				#{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				and create_time <![CDATA[ <= ]]>
				#{endDate}
			</if>
			<if test="id != null and id != ''">
				and id <![CDATA[ < ]]>
				#{id}
			</if>
		</where>
		order by id desc
		<if test="limit != null">
			limit #{limit}
		</if>
	</select>
	
	<select id="selectUnReadByDate" resultType="java.lang.Integer">
		select count(1) from p2p_s_notice
		where create_time <![CDATA[ >= ]]> #{nowDate}
	</select>
</mapper>