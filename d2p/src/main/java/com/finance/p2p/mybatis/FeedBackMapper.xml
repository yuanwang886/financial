<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.finance.p2p.dao.FeedBackMapper">
	<resultMap
		id="BaseResultMap"
		type="com.finance.p2p.entity.FeedBack">
		<id
			column="id"
			property="id"
			jdbcType="BIGINT" />
		<result
			column="user_id"
			property="userId"
			jdbcType="BIGINT" />
		<result
			column="content"
			property="content"
			jdbcType="VARCHAR" />
		<result
			column="phone"
			property="phone"
			jdbcType="VARCHAR" />
		<result
			column="img_url"
			property="imgUrl"
			jdbcType="VARCHAR" />
		<result
			column="create_time"
			property="createTime"
			jdbcType="TIMESTAMP" />
		<result
			column="modify_time"
			property="modifyTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, content, phone, img_url, create_time, modify_time
	</sql>
	<select
		id="selectByPrimaryKey"
		resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from p2p_feedback
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete
		id="deleteByPrimaryKey"
		parameterType="java.lang.Long">
		delete from p2p_feedback
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert
		id="insert"
		parameterType="com.finance.p2p.entity.FeedBack">
		insert into p2p_feedback (id, user_id, content,
		phone, img_url, create_time,
		modify_time)
		values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
		#{content,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP})
	</insert>
	<insert
		id="insertSelective"
		parameterType="com.finance.p2p.entity.FeedBack">
		insert into p2p_feedback
		<trim
			prefix="("
			suffix=")"
			suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="imgUrl != null">
				img_url,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
		</trim>
		<trim
			prefix="values ("
			suffix=")"
			suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="imgUrl != null">
				#{imgUrl,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update
		id="updateByPrimaryKeySelective"
		parameterType="com.finance.p2p.entity.FeedBack">
		update p2p_feedback
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="imgUrl != null">
				img_url = #{imgUrl,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update
		id="updateByPrimaryKey"
		parameterType="com.finance.p2p.entity.FeedBack">
		update p2p_feedback
		set user_id = #{userId,jdbcType=BIGINT},
		content = #{content,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		img_url = #{imgUrl,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modify_time = #{modifyTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select
		id="getFeedbackList"
		parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />,
		(select realname from p2p_user b where b.user_id = a.user_id) realName
		from p2p_feedback a
		<where>
			<if test="startDate != null and startDate != ''">
				and create_time <![CDATA[ >= ]]>
				#{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				and create_time <![CDATA[ <= ]]>
				#{endDate}
			</if>
		</where>
		order by id desc
	</select>
	
	<select
		id="getFeedbackList2"
		parameterType="java.util.Map"
		resultType="com.finance.p2p.entity.FeedBack">
		select
		a.id, a.content, a.phone, a.create_time createTime, b.realname realName
		from p2p_feedback a left join p2p_user b on a.user_id = b.user_id
		<where>
			<if test="startDate != null and startDate != ''">
				and a.create_time <![CDATA[ >= ]]>
				#{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				and a.create_time <![CDATA[ <= ]]>
				#{endDate}
			</if>
		</where>
		order by a.id desc
	</select>
</mapper>